name: Release Evidence

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Release tag to document (e.g. v0.1.4)
        required: true
        type: string

permissions:
  actions: read
  contents: write

concurrency:
  group: release-evidence-${{ inputs.tag || github.ref_name }}
  cancel-in-progress: true

jobs:
  evidence:
    name: evidence
    runs-on: ubuntu-24.04
    env:
      REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Resolve tag/prev/sha
        id: meta
        shell: bash
        env:
          TAG_INPUT: ${{ inputs.tag }}
        run: |
          set -euo pipefail
          if [ -n "${TAG_INPUT:-}" ]; then
            TAG="$TAG_INPUT"
          else
            TAG="$(gh release view -R "$REPO" --json tagName --jq .tagName)"
          fi

          PREV="$(gh api repos/$REPO/releases --paginate \
            --jq '[.[]|select(.draft==false and .prerelease==false)]|sort_by(.created_at)|reverse|.[1].tag_name // ""')"

          # Resolve commit SHA for the tag
          SHA="$(gh api repos/$REPO/commits/$TAG --jq .sha)"

          {
            echo "tag=$TAG"
            echo "prev=$PREV"
            echo "sha=$SHA"
          } >> "$GITHUB_OUTPUT"

      - name: Generate evidence
        id: gen
        shell: bash
        env:
          TAG:  ${{ steps.meta.outputs.tag }}
          PREV: ${{ steps.meta.outputs.prev }}
          SHA:  ${{ steps.meta.outputs.sha }}
        run: |
          set -euo pipefail
          OUT="release-evidence-$TAG.md"

          # Current release (+ assets)
          gh release view "$TAG" -R "$REPO" \
            --json name,tagName,publishedAt,author,url,assets > /tmp/release.json

          # Previous release publish time (for PR filtering)
          SINCE="$(gh release view "$PREV" -R "$REPO" --json publishedAt --jq .publishedAt 2>/dev/null || true)"

          {
            echo "# Release Evidence for $TAG"
            echo
            jq -r '
              {name:.name, tag:.tagName, published_at:.publishedAt, author:.author.login, html_url:.url}
              | to_entries[] | "* \(.key): \(.value)"
            ' /tmp/release.json

            echo
            if [ -n "$PREV" ] && [ "$PREV" != "$TAG" ]; then
              echo "## Commits since $PREV"
              gh api "repos/$REPO/compare/$PREV...$TAG" \
                --jq '.commits[] | "* \(.sha[0:7]) \(.commit.author.date) - \(.commit.message|split("\n")[0]) by \(.commit.author.name)"'
            else
              echo "## Commits"
              gh api "repos/$REPO/commits" \
                --jq '.[0:20][] | "* \(.sha[0:7]) - \(.commit.message|split("\n")[0]) by \(.commit.author.name) on \(.commit.author.date)"' || true
            fi

            echo
            echo "## Workflow runs for $TAG"
            gh run list -R "$REPO" --limit 100 \
              --json name,conclusion,status,headSha,databaseId \
            | jq -r --arg SHA "$SHA" --arg REPO "$REPO" '
                .[] | select(.headSha==$SHA)
                | "* \(.name) • conclusion: \(.conclusion // .status) • run_id=\(.databaseId) • https://github.com/\($REPO)/actions/runs/\(.databaseId)"'

            echo
            echo "## Release assets"
            jq -r '.assets[]? | "* \(.name) • size:\(.size) • downloads:\(.download_count // 0)"' /tmp/release.json

            if [ -n "$SINCE" ]; then
              echo
              echo "## PRs merged since $PREV"
              gh pr list -R "$REPO" -s merged -L 100 \
                --search "merged:>=$SINCE" \
                --json number,title,mergedAt,author,url \
              | jq -r '.[] | "* #\(.number) - \(.title) by @\(.author.login) on \(.mergedAt) • \(.url)"'
            fi
          } > "$OUT"

          echo "out=$OUT" >> "$GITHUB_OUTPUT"

      - name: Upload evidence to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          files: ${{ steps.gen.outputs.out }}
          overwrite_files: true
