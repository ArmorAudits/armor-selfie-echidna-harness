name: Release Evidence

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Tag to generate evidence for (defaults to latest release)
        required: false

permissions:
  contents: write
  actions: read

jobs:
  evidence:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Resolve tag/prev/sha
        id: meta
        env:
          REPO: ${{ github.repository }}
          TAG_INPUT: ${{ github.event.inputs.tag }}
        shell: bash
        run: |
          set -euo pipefail
          if [ -n "${TAG_INPUT:-}" ]; then
            TAG="$TAG_INPUT"
          else
            TAG="$(gh release view -R "$REPO" --json tagName --jq .tagName)"
          fi
          PREV="$(gh api repos/$REPO/releases --paginate \
            --jq '[.[]|select(.draft==false)]|sort_by(.created_at)|reverse|.[1].tag_name // ""')"
          # IMPORTANT: resolve the *commit* SHA behind the tag (works for annotated & lightweight)
          SHA="$(gh api repos/$REPO/commits/$TAG --jq .sha)"
          echo "tag=$TAG"  >> "$GITHUB_OUTPUT"
          echo "prev=$PREV" >> "$GITHUB_OUTPUT"
          echo "sha=$SHA"  >> "$GITHUB_OUTPUT"

      - name: Generate evidence
        id: gen
        env:
          REPO: ${{ github.repository }}
          TAG:  ${{ steps.meta.outputs.tag }}
          PREV: ${{ steps.meta.outputs.prev }}
          SHA:  ${{ steps.meta.outputs.sha }}
        shell: bash
        run: |
          set -euo pipefail
          OUT="release-evidence-$TAG.md"

          # Pull core release fields via gh release view (robust by tag)
          gh release view "$TAG" -R "$REPO" \
            --json name,tagName,publishedAt,author,url > /tmp/release.json

          {
            echo "# Release Evidence for $TAG"
            echo
            jq -r '
              {name:.name, tag:.tagName, published_at:.publishedAt, author:.author.login, html_url:.url}
              | to_entries[] | "* \(.key): \(.value)"
            ' /tmp/release.json
            echo
            if [ -n "$PREV" ] && [ "$PREV" != "$TAG" ]; then
              echo "## Commits since $PREV"
              gh api "repos/$REPO/compare/$PREV...$TAG" \
                --jq '.commits[] | "* \(.sha[0:7]) \(.commit.author.date) - \(.commit.message|split("\n")[0]) by \(.commit.author.name)"'
            else
              echo "## Commits"
              gh api "repos/$REPO/commits" \
                --jq '.[0:20][] | "* \(.sha[0:7]) - \(.commit.message|split("\n")[0]) by \(.commit.author.name) on \(.commit.author.date)"' || true
            fi
            echo
            echo "## Workflow runs for $TAG"
            # Use CLI list (more reliable than raw REST here); filter by headSha == commit SHA
            RUNS="$(gh run list -R "$REPO" --limit 100 \
                    --json name,conclusion,status,headSha,databaseId \
                  | jq -r --arg SHA "$SHA" \
                      '.[] | select(.headSha==$SHA) | "* \(.name) • conclusion: \(.conclusion // .status) • run_id=\(.databaseId)"')"
            if [ -n "$RUNS" ]; then
              echo "$RUNS"
            else
              echo "* No matching workflow runs for commit $SHA"
            fi
          } > "$OUT"

          echo "out=$OUT" >> "$GITHUB_OUTPUT"

      - name: Upload evidence to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          files: ${{ steps.gen.outputs.out }}
