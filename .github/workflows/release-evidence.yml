name: Release Evidence
on:
  release:
    types: [published]
jobs:
  evidence:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/github-script@v7
        id: gen
        with:
          script: |
            const fs = require('fs');
            const {owner, repo} = context.repo;
            const current = context.payload.release.tag_name;

            // Find previous non-draft, non-prerelease release
            const rels = await github.paginate(github.rest.repos.listReleases, {owner, repo, per_page: 100});
            const prev = rels.filter(r => !r.draft && !r.prerelease && r.tag_name !== current)
                             .map(r => r.tag_name)[0];

            let commits = ['(first tagged release)'];
            if (prev) {
              const cmp = await github.rest.repos.compareCommitsWithBasehead({
                owner, repo, basehead: `${prev}...${current}`
              });
              commits = cmp.data.commits.map(c => `- ${c.sha.slice(0,7)} ${c.commit.message.split('\\n')[0]}`);
            }

            const requiredChecks = ["Armor Audit","Security Monitor","Slither Gate","Foundry Matrix","CodeQL"];
            const body = [
              `# Release Evidence â€” ${current}`,
              ``,
              `**Repository:** ${owner}/${repo}`,
              `**Released at:** ${new Date(context.payload.release.published_at).toISOString()}`,
              `**Tag:** ${current}`,
              ``,
              `## Required PR Gates`,
              requiredChecks.map(c => `- ${c}`).join('\\n'),
              ``,
              `## Commits since previous tag${prev ? ` (${prev})` : ''}`,
              commits.join('\\n'),
              ``,
              `## CI Artifacts`,
              `See GitHub Actions run logs and artifacts for the release event.`,
              ``,
              `---`,
              `_Generated by Release Evidence workflow_`
            ].join('\\n');

            fs.writeFileSync('release-evidence.md', body);
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-evidence-${{ github.event.release.tag_name }}
          path: release-evidence.md
      - name: Attach to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-evidence.md
