name: Armor AI Doctor (zero-actions)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "monitor/**"
      - ".github/workflows/armor-ai-doctor.yml"

jobs:
  doctor:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      REPO: ${{ github.repository }}
      SHA:  ${{ github.sha }}
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Run Armor AI Doctor without external actions
        run: |
          set -euxo pipefail
          mkdir -p monitor artifacts

          # Fetch files directly from the repo (no actions/checkout)
          for f in monitor/doctor.py monitor/tools.csv monitor/requirements.txt; do
            curl -sS \
              -H "Authorization: Bearer $GH_TOKEN" \
              -H "Accept: application/vnd.github.raw" \
              -o "$f" \
              "https://api.github.com/repos/$REPO/contents/$f?ref=$SHA"
          done

          python3 --version
          python3 -m pip install --upgrade pip
          python3 -m pip install -r monitor/requirements.txt

          # Self-log to artifacts/doctor.log and Step Summary
          {
            echo "=== $(date -u) Armor AI Doctor start ==="
            python3 monitor/doctor.py --inventory monitor/tools.csv
            echo "=== $(date -u) Armor AI Doctor end ==="
          } 2>&1 | tee artifacts/doctor.log

          echo "## Armor AI Doctor â€” Summary" >> "$GITHUB_STEP_SUMMARY"
          if [ -f artifacts/alerts.md ]; then
            echo "" >> "$GITHUB_STEP_SUMMARY"
            sed -n '1,120p' artifacts/alerts.md | tee -a artifacts/doctor.log | sed -n '1,120p' >> "$GITHUB_STEP_SUMMARY"
          else
            echo "No alerts.md produced" | tee -a artifacts/doctor.log
            echo "No alerts.md produced" >> "$GITHUB_STEP_SUMMARY"
          fi

          # Pack workspace for manual download if needed (no upload-artifact)
          tar -czf artifacts/workspace.tgz monitor artifacts || true

      - name: Publish reports to branch (optional)
        if: always()
        env:
          BR: doctor-artifacts
        run: |
          set -eux
          git init .
          git config user.email "bot@armor.ai"
          git config user.name "Armor AI Doctor"
          git checkout -b "$BR"
          mkdir -p reports
          cp -r artifacts/* reports/
          git add reports
          git commit -m "AI Doctor reports for $SHA"
          git remote add origin "https://x-access-token:${GH_TOKEN}@github.com/${REPO}"
          git push -f origin "$BR"
