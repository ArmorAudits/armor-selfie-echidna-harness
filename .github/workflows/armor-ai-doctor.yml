name: Armor AI Doctor

on:
  workflow_dispatch:
  push:
    paths:
      - 'monitor/**'
      - '.github/workflows/armor-ai-doctor.yml'
  schedule:
    - cron: '17 9 * * 1'  # Mondays 09:17 UTC

permissions:
  contents: read
  issues: write

jobs:
  doctor:
    runs-on: ubuntu-latest
    env:
      # Use env to avoid direct secrets reference in if:
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL || '' }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install tools (jq)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          if [ -f monitor/requirements.txt ]; then
            pip install -r monitor/requirements.txt
          else
            pip install requests PyYAML packaging semver
          fi

      - name: Run Armor AI Doctor
        run: |
          mkdir -p artifacts
          python monitor/doctor.py --inventory monitor/tools.csv

      - name: Determine if quarantined
        id: quarantine
        run: |
          if [ -s artifacts/quarantine.json ] && jq -e 'length>0' artifacts/quarantine.json >/dev/null; then
            echo "has_quarantine=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_quarantine=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create/Update issue for quarantined tools
        if: ${{ steps.quarantine.outputs.has_quarantine == 'true' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const title = 'Armor AI Doctor: Quarantined tools detected';
            const body = fs.readFileSync('artifacts/alerts.md', 'utf8');
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner, repo: context.repo.repo, state: 'open', labels: 'security'
            });
            const existing = issues.find(i => i.title === title);
            if (existing) {
              await github.rest.issues.update({ owner: context.repo.owner, repo: context.repo.repo, issue_number: existing.number, body });
            } else {
              await github.rest.issues.create({ owner: context.repo.owner, repo: context.repo.repo, title, body, labels: ['security'] });
            }

      - name: Discord alert (optional)
        if: ${{ env.DISCORD_WEBHOOK_URL != '' && steps.quarantine.outputs.has_quarantine == 'true' }}
        run: |
          PAYLOAD=$(jq -Rs . < artifacts/alerts.md)
          curl -sS -X POST -H "Content-Type: application/json" \
            -d "{\"content\": $PAYLOAD}" \
            "${DISCORD_WEBHOOK_URL}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tool-monitor-report
          path: artifacts/*
